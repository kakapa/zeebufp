<?php

namespace {{ namespace }};

use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use {{ namespacedModel }};

class {{ class }} extends Controller
{
    /**
     * Class constructor.
     */
    public function __construct()
    {
        //$this->middleware([]);
        //$this->authorizeResource({{ model }}::class, '{{ modelVariable }}');
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Inertia\Response
     */
    public function index()
    {
        return inertia()->render('{{ model }}s/Index', [
            '{{ modelVariable }}s' => {{ model }}Resource::collection(
                Cache::rememberForever('{{ modelVariable }}s', function () {
                    return {{ model }}::all();
                })
            ),
            'statuses' => {{ model }}StatusEnums::labels(),
            '{{ modelVariable }}' => session('{{ modelVariable }}') ?? null,
            'success' => session('success') ?? null,
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\Store{{ model }}Request  $request
     * @return \Illuminate\Http\RedirectResponse
     */
    public function store(Store{{ model }}Request $request)
    {
        ${{ modelVariable }} = {{ model }}::create($request->validated());

        // Clear the cache to ensure the new {{ modelVariable }} is available
        Cache::forget('{{ modelVariable }}s');

        return redirect()->route('dashboard')
            ->with('success', '{{ model }} created successfully.')
            ->with('{{ modelVariable }}', new {{ model }}Resource(${{ modelVariable }}));
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\{{ model }}  ${{ modelVariable }}
     * @return \Inertia\Response
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return inertia()->render('{{ model }}s/Show', [
            '{{ modelVariable }}' => new {{ model }}Resource(${{ modelVariable }}),
            'statuses' => {{ model }}StatusEnums::labels(),
        ]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\Store{{ model }}Request  $request
     * @param  \App\Models\{{ model }}  ${{ modelVariable }}
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Store{{ model }}Request $request, {{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->update($request->validated());

        // Clear the cache to ensure the new {{ modelVariable }} is available
        Cache::forget('{{ modelVariable }}s');

        return redirect()->route('dashboard')
            ->with('success', '{{ model }} updated successfully.')
            ->with('{{ modelVariable }}', new {{ model }}Resource(${{ modelVariable }}));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\{{ model }}  ${{ modelVariable }}
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        // Clear the cache to ensure the new {{ modelVariable }} is available
        Cache::forget('{{ modelVariable }}s');

        return redirect()->route('dashboard')
            ->with('success', '{{ model }} deleted successfully.');
    }
}
