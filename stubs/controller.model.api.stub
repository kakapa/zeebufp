<?php

namespace {{ namespace }};

use App\Abstracts\ApiController;
use {{ namespacedModel }};
use {{ namespacedRequests }}

class {{ class }} extends ApiController
{
    /**
     * Class constructor.
     */
    public function __construct()
    {
        //$this->middleware(['auth:user_api']);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function index()
    {
        ${{ modelVariable }}s = {{ model }}::orderBy('id')->paginate();

        return $this->respondOk(${{ modelVariable }}s);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \{{ namespacedStoreRequest }}  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store({{ storeRequest }} $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\JsonResponse
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return ${{ modelVariable }}->exists ? $this->respondOk(${{ modelVariable }}) : $this->respondNotFound('{{ model }} not found!');
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \{{ namespacedUpdateRequest }}  $request
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\JsonResponse
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        //${{ modelVariable }}->update($request->validated());

        return $this->respondOk(${{ modelVariable }});
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{ namespacedModel }}  ${{ modelVariable }}
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->delete();

        return $this->respondNoContent();
    }
}
